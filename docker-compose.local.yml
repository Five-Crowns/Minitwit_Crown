networks:
  main:
    name: itu-minitwit-network

services:
  app:
    # image: minitwitimage
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: minitwit_local
    networks:
      - main
    depends_on:
      - itusqlimage
    ports:
      - "5000:5000"
    environment:
      - RAILS_ENV=development
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=itusqlimage
      - POSTGRES_PORT=5432
    command: >
      bash -c "sleep 10 && bundle exec rake db:create db:migrate && bundle exec ruby minitwit.rb -o 0.0.0.0"
      
  itusqlimage:
    # image: postgresqlimage
    build:
      context: .
      dockerfile: Dockerfile.postgresql
    container_name: minitwit_postgresql
    networks:
      - main
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgresql_data:/var/lib/postgresql/data  # Persistent Postgres database

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - main
    ports:
      - "9090:9090"
    depends_on:
      - app

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - "8080:8080"
    networks:
      - main

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - "3000:3000"
    networks:
      - main
    volumes:
      - grafana_data:/var/lib/grafana  # Persist dashboards & settings
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.6.0
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./log/minitwit.log:/Minitwit_crown/log/minitwit.log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
    command: ["--strict.perms=false"]

volumes:
  postgresql_data:
  grafana_data:
  elasticsearch_data: