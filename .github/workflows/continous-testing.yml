name: Continuous Testing

on:
  pull_request:
    branches:
      - Quality
  workflow_dispatch:
    manual: true

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
      POSTGRES_HOST_TEST: minitwit_postgresql_test
      POSTGRES_PORT: 5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run standardrb
        run: |
          gem install standardrb --user-install
          standardrb
          echo "Standardrb passed"
    
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test minitwit
        run: |

          # Try to pull test image first. Build it locally if it fails.
          if docker pull $DOCKER_USERNAME/minitwit-test-image; then
            echo "Successfully pulled test image from Docker Hub"
          else
            echo "Image not found in Docker Hub, building locally"
            docker build -t $DOCKER_USERNAME/minitwit-test-image -f Dockerfile.test .
          fi
          
          # Try to pull PG image first. Build it locally if it fails.
          if docker pull $DOCKER_USERNAME/postgresqlimage; then
            echo "Successfully pulled PostgreSQL image from Docker Hub"
          else
            echo "Image not found in Docker Hub, building locally"
            docker build -t $DOCKER_USERNAME/postgresqlimage -f Dockerfile.postgresql .
          fi

          # Run the tests
          docker compose -f docker-compose.test.yml up --exit-code-from app
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}