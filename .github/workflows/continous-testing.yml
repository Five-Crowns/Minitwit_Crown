name: Continuous Testing

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    manual: true

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
      POSTGRES_HOST_TEST: minitwit_postgresql_test
      POSTGRES_PORT: 5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install standardrb
        run: |
          gem install standardrb --user-install
          echo "$HOME/.local/share/gem/ruby/3.2.0/bin" >> $GITHUB_PATH

      - name: Run standardrb
        run: |
          standardrb

      - name: Install dawnscanner
        run: |
          gem install dawnscanner --user-install
          echo "$HOME/.local/share/gem/ruby/3.2.0/bin" >> $GITHUB_PATH
          echo "PATH=$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH" >> $GITHUB_ENV
          
      - name: Clone KB repository
        run: |
          git clone https://github.com/thesp0nge/dawnscanner_knowledge_base.git $HOME/dawnscanner/kb  

      - name: Run dawnscanner
        run: |
          dawn scan .


      - name: Install rubycritic
        run: gem install rubycritic --user-install

      - name: Run rubycritic
        run: rubycritic --no-browser --format console

      - name: Install Codeclimate
        run: gem install codeclimate-test-reporter --user-install

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test minitwit
        run: |

          # Try to pull test image first. Build it locally if it fails.
          if docker pull $DOCKER_USERNAME/minitwit-test-image; then
            echo "Successfully pulled test image from Docker Hub"
          else
            echo "Image not found in Docker Hub, building locally"
            docker build -t $DOCKER_USERNAME/minitwit-test-image -f Dockerfile.test .
          fi
          
          # Try to pull PG image first. Build it locally if it fails.
          if docker pull $DOCKER_USERNAME/postgresqlimage; then
            echo "Successfully pulled PostgreSQL image from Docker Hub"
          else
            echo "Image not found in Docker Hub, building locally"
            docker build -t $DOCKER_USERNAME/postgresqlimage -f Dockerfile.postgresql .
          fi

          # Run the tests
          docker compose -f docker-compose.test.yml up --exit-code-from app
          

        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Check coverage report
        run: |
          ls -la ./coverage
            cat ./coverage/.resultset.json

      - name: Upload coverage to Code Climate
        run: |
          codeclimate-test-reporter
        env:
          CODECLIMATE_REPO_TOKEN: ${{ secrets.CODECLIMATE_REPO_TOKEN }}